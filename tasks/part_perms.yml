- name: Get Current Mount Points
  set_fact"
    mount_points:
      tmp: "{{ ansible_mounts | selectattr('mount', 'equalto', '/tmp') | map(attribute='device') | first }}"
      var: "{{ ansible_mounts | selectattr('mount', 'equalto', '/var') | map(attribute='device') | first }}"
      var_tmp: "{{ ansible_mounts | selectattr('mount', 'equalto', '/var/tmp') | map(attribute='device') | first }}"
      var_log: "{{ ansible_mounts | selectattr('mount', 'equalto', '/var/log') | map(attribute='device') | first }}"
      var_log_audit: "{{ ansible_mounts | selectattr('mount', 'equalto', '/var/log/audit') | map(attribute='device') | first }}"
      home: "{{ ansible_mounts | selectattr('mount', 'equalto', '/home') | map(attribute='device') | first }}"

- name: Sets nodev, no suid, noexec for /tmp
  mount: >
    name="/tmp"
    src={{ mount_points.tmp }}
    state=mounted
    fstype=ext4
    opts="nodev,nosuid,noexec"
  when: item.mount == "/tmp"
  with_items: ansible_mounts

- name: Sets nodev, no suid, for /var
  mount: >
    name="/var"
    src={{ mount_points.var }}
    state=mounted
    fstype=ext4
    opts="nodev,nosuid,noexec"
  when: item.mount == "/var"
  with_items: ansible_mounts

- name: Sets nodev, no suid, noexec for /var/tmp
  mount: >
    name="/var/tmp"
    src={{ mount_points.var_tmp }}
    state=mounted
    fstype=ext4
    opts="nodev,nosuid,noexec"
  when: item.mount == "/var/tmp"
  with_items: ansible_mounts

- name: Sets nodev, no suid, noexec for /var/log
  mount: >
    name="/var/log"
    src={{ mount_points.var_log }}
    state=mounted
    fstype=ext4
    opts="nodev,nosuid,noexec"
  when: item.mount == "/var/log"
  with_items: ansible_mounts

- name: Sets nodev, no suid, noexec for /var/log/audit
  mount: >
    name="/var/log/audit"
    src={{ mount_points.var_log_audit }}
    state=mounted
    fstype=ext4
    opts="nodev,nosuid,noexec"
  when: item.mount == "/var/log/audit"
  with_items: ansible_mounts

- name: Sets nodev, no suid, for /home
  mount: >
    name="/home"
    src={{ mount_points.home }}
    state=mounted
    fstype=ext4
    opts="nodev,nosuid,noexec"
  when: item.mount == "/home"
  with_items: ansible_mounts
